-- Tabela principal de faturas
CREATE TABLE invoices (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  invoice_number TEXT NOT NULL,
  issue_date DATE NOT NULL,
  due_date DATE NOT NULL,
  purchase_order TEXT,
  terms TEXT,
  currency TEXT NOT NULL DEFAULT 'MT',
  subtotal NUMERIC(12, 2) NOT NULL,
  total_tax NUMERIC(12, 2) NOT NULL,
  total_amount NUMERIC(12, 2) NOT NULL,
  status TEXT NOT NULL DEFAULT 'draft' CHECK (status IN ('draft', 'issued', 'paid', 'cancelled')),
  logo_url TEXT,
  signature_url TEXT,
  user_id UUID REFERENCES auth.users NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE payments (
  id SERIAL PRIMARY KEY,
  payment_id VARCHAR(50) NOT NULL UNIQUE,
  method VARCHAR(20) NOT NULL,
  phone_number VARCHAR(20) NOT NULL,
  amount NUMERIC(10, 2) NOT NULL,
  status VARCHAR(20) NOT NULL,
  invoice_data JSONB NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  invoice_id UUID REFERENCES invoices(id)
);

-- Tabela de emissores (pode ser reutilizada para várias faturas do mesmo emissor)
CREATE TABLE issuers (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  company_name TEXT NOT NULL,
  document TEXT NOT NULL,
  country TEXT NOT NULL,
  city TEXT NOT NULL,
  district TEXT NOT NULL,
  contact_person TEXT,
  email TEXT NOT NULL,
  phone TEXT NOT NULL,
  user_id UUID REFERENCES auth.users NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  UNIQUE(document, user_id)
);

-- Tabela de destinatários (pode ser reutilizada)
CREATE TABLE recipients (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  full_name TEXT NOT NULL,
  document TEXT,
  country TEXT,
  city TEXT,
  district TEXT,
  email TEXT NOT NULL,
  phone TEXT NOT NULL,
  user_id UUID REFERENCES auth.users NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Tabela de relacionamento entre faturas e emissores/destinatários
CREATE TABLE invoice_parties (
  invoice_id UUID REFERENCES invoices ON DELETE CASCADE,
  issuer_id UUID REFERENCES issuers,
  recipient_id UUID REFERENCES recipients,
  PRIMARY KEY (invoice_id),
  CONSTRAINT chk_parties CHECK (
    (issuer_id IS NOT NULL AND recipient_id IS NOT NULL) OR
    (issuer_id IS NOT NULL AND recipient_id IS NULL) OR
    (issuer_id IS NULL AND recipient_id IS NOT NULL)
  )
);

-- Tabela de itens da fatura
CREATE TABLE invoice_items (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  invoice_id UUID REFERENCES invoices ON DELETE CASCADE NOT NULL,
  description TEXT NOT NULL,
  quantity NUMERIC(10, 2) NOT NULL,
  unit_price NUMERIC(12, 2) NOT NULL,
  total_price NUMERIC(12, 2) NOT NULL,
  position INTEGER NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Tabela de taxas dos itens
CREATE TABLE item_taxes (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  item_id UUID REFERENCES invoice_items ON DELETE CASCADE NOT NULL,
  name TEXT NOT NULL,
  rate NUMERIC(10, 2) NOT NULL,
  amount NUMERIC(12, 2) NOT NULL,
  tax_type TEXT NOT NULL CHECK (tax_type IN ('percent', 'fixed')),
  category TEXT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Tabela de taxas consolidadas (opcional, para relatórios)
CREATE TABLE invoice_tax_summary (
  invoice_id UUID REFERENCES invoices ON DELETE CASCADE,
  tax_name TEXT NOT NULL,
  tax_amount NUMERIC(12, 2) NOT NULL,
  PRIMARY KEY (invoice_id, tax_name)
);

-- Índices para melhor performance
CREATE INDEX idx_invoices_user_id ON invoices(user_id);
CREATE INDEX idx_invoices_status ON invoices(status);
CREATE INDEX idx_invoice_items_invoice_id ON invoice_items(invoice_id);
CREATE INDEX idx_item_taxes_item_id ON item_taxes(item_id);
