CREATE OR REPLACE FUNCTION public.save_invoice_transaction(invoice_data jsonb)
RETURNS uuid
LANGUAGE plpgsql
AS $$
DECLARE
  invoice_id uuid;
  issuer_id uuid;
  recipient_id uuid;
  item_record record;
  tax_record record;
  tax_summary_record record;
BEGIN
  -- Inserir ou obter emissor
  INSERT INTO issuers (
    company_name, document, country, city, district, 
    contact_person, email, phone, user_id
  ) VALUES (
    invoice_data->'form_data'->'emitente'->>'nomeEmpresa',
    invoice_data->'form_data'->'emitente'->>'documento',
    invoice_data->'form_data'->'emitente'->>'pais',
    invoice_data->'form_data'->'emitente'->>'cidade',
    invoice_data->'form_data'->'emitente'->>'bairro',
    invoice_data->'form_data'->'emitente'->>'pessoaContato',
    invoice_data->'form_data'->'emitente'->>'email',
    invoice_data->'form_data'->'emitente'->>'telefone',
    (invoice_data->>'user_id')::uuid
  ) ON CONFLICT (document, user_id) DO UPDATE SET
    company_name = EXCLUDED.company_name,
    email = EXCLUDED.email,
    phone = EXCLUDED.phone
  RETURNING id INTO issuer_id;

  -- Inserir ou obter destinat치rio
  INSERT INTO recipients (
    full_name, document, country, city, district, email, phone, user_id
  ) VALUES (
    invoice_data->'form_data'->'destinatario'->>'nomeCompleto',
    invoice_data->'form_data'->'destinatario'->>'documento',
    invoice_data->'form_data'->'destinatario'->>'pais',
    invoice_data->'form_data'->'destinatario'->>'cidade',
    invoice_data->'form_data'->'destinatario'->>'bairro',
    invoice_data->'form_data'->'destinatario'->>'email',
    invoice_data->'form_data'->'destinatario'->>'telefone',
    (invoice_data->>'user_id')::uuid
  ) ON CONFLICT (email, user_id) DO UPDATE SET
    full_name = EXCLUDED.full_name,
    phone = EXCLUDED.phone
  RETURNING id INTO recipient_id;

  -- Inserir fatura principal
  INSERT INTO invoices (
    invoice_number, issue_date, due_date, purchase_order, terms, currency,
    subtotal, total_tax, total_amount, status, logo_url, signature_url, user_id
  ) VALUES (
    invoice_data->'form_data'->>'faturaNumero',
    (invoice_data->'form_data'->>'dataFatura')::date,
    (invoice_data->'form_data'->>'dataVencimento')::date,
    invoice_data->'form_data'->>'ordemCompra',
    invoice_data->'form_data'->>'termos',
    invoice_data->'form_data'->>'moeda',
    (invoice_data->'totais'->>'subtotal')::numeric,
    (invoice_data->'totais'->>'totalTaxas')::numeric,
    (invoice_data->'totais'->>'totalFinal')::numeric,
    'paid', -- Definindo como pago j치 que o pagamento foi bem-sucedido
    invoice_data->>'logo',
    invoice_data->>'assinatura',
    (invoice_data->>'user_id')::uuid
  ) RETURNING id INTO invoice_id;

  -- Relacionar fatura com emissor e destinat치rio
  INSERT INTO invoice_parties (invoice_id, issuer_id, recipient_id)
  VALUES (invoice_id, issuer_id, recipient_id);

  -- Inserir itens da fatura
  FOR item_record IN SELECT * FROM jsonb_array_elements(invoice_data->'items')
  LOOP
    DECLARE
      item_id uuid;
    BEGIN
      INSERT INTO invoice_items (
        invoice_id, description, quantity, unit_price, total_price, position
      ) VALUES (
        invoice_id,
        item_record->>'descricao',
        (item_record->>'quantidade')::numeric,
        (item_record->>'precoUnitario')::numeric,
        (item_record->>'totalItem')::numeric,
        (item_record->>'id')::integer
      ) RETURNING id INTO item_id;

      -- Inserir taxas dos itens
      FOR tax_record IN SELECT * FROM jsonb_array_elements(item_record->'taxas')
      LOOP
        INSERT INTO item_taxes (
          item_id, name, rate, amount, tax_type, category
        ) VALUES (
          item_id,
          tax_record->>'nome',
          (tax_record->>'valor')::numeric,
          (tax_record->>'valor')::numeric, -- Ajuste conforme necess치rio
          tax_record->>'tipo',
          tax_record->>'categoria'
        );
      END LOOP;
    END;
  END LOOP;

  -- Inserir resumo de taxas
  FOR tax_summary_record IN SELECT * FROM jsonb_array_elements(invoice_data->'totais'->'taxasDetalhadas')
  LOOP
    INSERT INTO invoice_tax_summary (invoice_id, tax_name, tax_amount)
    VALUES (
      invoice_id,
      tax_summary_record->>'nome',
      (tax_summary_record->>'valor')::numeric
    );
  END LOOP;

  RETURN invoice_id;
END;
$$;
